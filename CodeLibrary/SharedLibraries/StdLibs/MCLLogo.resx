<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
            Microsoft ResX Schema 
        
            Version 1.3
                
            The primary goals of this format is to allow a simple XML format 
            that is mostly human readable. The generation and parsing of the 
            various data types are done through the TypeConverter classes 
            associated with the data types.
        
            Example:
        
                ... ado.net/XML headers & schema ...
                <resheader name="resmimetype">text/microsoft-resx</resheader>
                <resheader name="version">1.3</resheader>
                <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
                <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
                <data name="Name1">this is my long string</data>
                <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
                <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
                    [base64 mime encoded serialized .NET Framework object]
                </data>
                <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
                    [base64 mime encoded string representing a byte array form of the .NET Framework object]
                </data>
        
            There are any number of "resheader" rows that contain simple 
            name/value pairs.
            
            Each data row contains a name, and value. The row also contains a 
            type or mimetype. Type corresponds to a .NET class that support 
            text/value conversion through the TypeConverter architecture. 
            Classes that don't support this are serialized and stored with the 
            mimetype set.
                     
            The mimetype is used for serialized objects, and tells the 
            ResXResourceReader how to depersist the object. This is currently not 
            extensible. For a given mimetype the value must be set accordingly:
        
            Note - application/x-microsoft.net.object.binary.base64 is the format 
                   that the ResXResourceWriter will generate, however the reader can 
                   read any of the formats listed below.
        
            mimetype: application/x-microsoft.net.object.binary.base64
            value   : The object must be serialized with 
                    : System.Serialization.Formatters.Binary.BinaryFormatter
                    : and then encoded with base64 encoding.
        
            mimetype: application/x-microsoft.net.object.soap.base64
            value   : The object must be serialized with 
                    : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
                    : and then encoded with base64 encoding.
            mimetype: application/x-microsoft.net.object.bytearray.base64
            value   : The object must be serialized into a byte array 
                    : using a System.ComponentModel.TypeConverter
                    : and then encoded with base64 encoding.
        -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="picMCLLogo.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Assembly</value>
  </data>
  <data name="picMCLLogo.Image" type="System.Drawing.Bitmap, System.Drawing, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Name">
    <value>MCLLogo</value>
  </data>
</root>